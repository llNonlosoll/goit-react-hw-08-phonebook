{"version":3,"file":"static/js/298.0118019d.chunk.js","mappings":"kNAAaA,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAEvBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECCzBC,EAAc,WAIzB,MAAO,CACLC,WAJgBC,EAAAA,EAAAA,IAAYR,GAK5BS,aAJkBD,EAAAA,EAAAA,IAAYJ,GAMjC,E,kBCPYM,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAETH,EAAgBH,IAAhBG,YAwBR,OACE,kBAAMI,SAvBa,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAOnB,GALqBR,EAAYS,MAC/B,qBAAGC,KACIC,gBAAkBJ,EAAKK,SAASF,KAAKG,MAAMF,aADlD,IAKAG,MAAM,GAAD,OAAIP,EAAKK,SAASF,KAAKG,MAAvB,gCADP,CAKA,IAAMH,EAAOH,EAAKK,SAASF,KAAKG,MAC1BE,EAASR,EAAKK,SAASG,OAAOF,MAEpCX,GAASc,EAAAA,EAAAA,IAAW,CAAEN,KAAAA,EAAMK,OAAAA,KAE5BR,EAAKU,OAPJ,CAQF,EAGC,WACE,mBAAOC,QAAQ,OAAf,kBAEE,kBACEC,GAAG,OACHC,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOL,QAAQ,SAAf,oBAEE,kBACEC,GAAG,SACHC,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,2BAGL,EClDYI,EAAe,WAC1B,IAAQxB,EAAgBH,IAAhBG,YAEFE,GAAWC,EAAAA,EAAAA,MAMjB,OACE,wBACGH,EAAYyB,KAAI,SAAAC,GAAO,OACtB,2BACE,4BACE,yBAAIA,EAAQhB,KAAZ,SACA,uBAAIgB,EAAQX,aAEd,mBACEK,KAAK,SACLV,KAAK,SACLiB,QAAS,kBAfSR,EAeiBO,EAAQP,QAdnDjB,GAAS0B,EAAAA,EAAAA,IAAcT,IADG,IAAAA,CAeT,EAHX,sBALOO,EAAQP,GADK,KAiB7B,EC5Bc,SAASU,IACtB,IAAM3B,GAAWC,EAAAA,EAAAA,MACTL,EAAcD,IAAdC,UAMR,OAJAgC,EAAAA,EAAAA,YAAU,WACR5B,GAAS6B,EAAAA,EAAAA,MACV,GAAE,CAAC7B,KAGF,iCACE,SAAC8B,EAAA,EAAD,WACE,gDAEF,SAAC/B,EAAD,KACA,yBAAMH,GAAa,4BACnB,SAAC0B,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","hooks/useContacts.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectIsLoading = state => state.contacts.loading;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading, selectAllContacts } from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const allContacts = useSelector(selectAllContacts);\n\n  return {\n    isLoading,\n    allContacts,\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { useContacts } from 'hooks/useContacts';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const { allContacts } = useContacts();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const isInContacts = allContacts.some(\n      ({ name }) =>\n        name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`${form.elements.name.value} is already in contacts`);\n      return;\n    }\n\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Number\n        <input\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { useContacts } from 'hooks/useContacts';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\n// import { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const { allContacts } = useContacts();\n\n  const dispatch = useDispatch();\n\n  const handleContactDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {allContacts.map(contact => (\n        <li key={contact.id}>\n          <div>\n            <p>{contact.name}: </p>\n            <p>{contact.number}</p>\n          </div>\n          <button\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => handleContactDelete(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useContacts } from 'hooks/useContacts';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const { isLoading } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["selectIsLoading","state","contacts","loading","selectAllContacts","items","useContacts","isLoading","useSelector","allContacts","ContactForm","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","some","name","toLowerCase","elements","value","alert","number","addContact","reset","htmlFor","id","type","pattern","title","required","ContactsList","map","contact","onClick","deleteContact","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}